{"version":3,"sources":["file:////Users/yangjiang/dev/learn/vue/src/observer/array.js","file:///webpack/runtime/getFullHash"],"names":["_","require","arrayProto","Array","prototype","arrayMethods","Object","create","forEach","method","original","define","mutator","i","arguments","length","args","result","apply","ob","__ob__","inserted","slice","observeArray","notify","$set","index","val","splice","$remove","indexOf","module","exports"],"mappings":";;;;;;;;;;;AAAA,IAAIA,CAAC,GAAGC,mBAAO,CAAC,oCAAD,CAAf;;AACA,IAAIC,UAAU,GAAGC,KAAK,CAACC,SAAvB;AACA,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,UAAd,CAAnB;AAEA;AACA;AACA;;AAEA,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,SAAzB,EAAoC,QAApC,EAA8C,MAA9C,EAAsD,SAAtD,EAAiEM,OAAjE,CACI,UAAUC,MAAV,EAAkB;AACd;AACA,MAAIC,QAAQ,GAAGR,UAAU,CAACO,MAAD,CAAzB;;AACAT,GAAC,CAACW,MAAF,CAASN,YAAT,EAAuBI,MAAvB,EAA+B,SAASG,OAAT,GAAmB;AAC9C;AACA;AACA,QAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AACA,QAAIC,IAAI,GAAG,IAAIb,KAAJ,CAAUU,CAAV,CAAX;;AACA,WAAOA,CAAC,EAAR,EAAY;AACRG,UAAI,CAACH,CAAD,CAAJ,GAAUC,SAAS,CAACD,CAAD,CAAnB;AACH;;AACD,QAAII,MAAM,GAAGP,QAAQ,CAACQ,KAAT,CAAe,IAAf,EAAqBF,IAArB,CAAb;AACA,QAAIG,EAAE,GAAG,KAAKC,MAAd;AACA,QAAIC,QAAJ;;AACA,YAAQZ,MAAR;AACI,WAAK,MAAL;AACIY,gBAAQ,GAAGL,IAAX;AACA;;AACJ,WAAK,SAAL;AACIK,gBAAQ,GAAGL,IAAX;AACA;;AACJ,WAAK,QAAL;AACIK,gBAAQ,GAAGL,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;AACA;AATR;;AAWA,QAAID,QAAJ,EAAcF,EAAE,CAACI,YAAH,CAAgBF,QAAhB,EAtBgC,CAuB9C;;AACAF,MAAE,CAACK,MAAH;AACA,WAAOP,MAAP;AACH,GA1BD;AA2BH,CA/BL;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAjB,CAAC,CAACW,MAAF,CAAST,UAAT,EAAqB,MAArB,EAA6B,SAASuB,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;AACnD,MAAID,KAAK,IAAI,KAAKX,MAAlB,EAA0B;AACtB,SAAKA,MAAL,GAAcW,KAAK,GAAG,CAAtB;AACH;;AACD,SAAO,KAAKE,MAAL,CAAYF,KAAZ,EAAmB,CAAnB,EAAsBC,GAAtB,EAA2B,CAA3B,CAAP;AACH,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;;;AAEA3B,CAAC,CAACW,MAAF,CAAST,UAAT,EAAqB,SAArB,EAAgC,SAAS2B,OAAT,CAAiBH,KAAjB,EAAwB;AACpD,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,SAAK,GAAG,KAAKI,OAAL,CAAaJ,KAAb,CAAR;AACH;;AACD,MAAIA,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,WAAO,KAAKE,MAAL,CAAYF,KAAZ,EAAmB,CAAnB,EAAsB,CAAtB,CAAP;AACH;AACJ,CAPD;;AASAK,MAAM,CAACC,OAAP,GAAiB3B,YAAjB,C;;;;;;;;;;WC1EA,oD","file":"main.e7b9c294aa26d46c1541.hot-update.js","sourcesContent":["var _ = require('../util');\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\n/**\n * Intercept mutating methods and emit events\n */\n\n['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(\n    function (method) {\n        // cache original method\n        var original = arrayProto[method];\n        _.define(arrayMethods, method, function mutator() {\n            // avoid leaking arguments:\n            // http://jsperf.com/closure-with-arguments\n            var i = arguments.length;\n            var args = new Array(i);\n            while (i--) {\n                args[i] = arguments[i];\n            }\n            var result = original.apply(this, args);\n            var ob = this.__ob__;\n            var inserted;\n            switch (method) {\n                case 'push':\n                    inserted = args;\n                    break;\n                case 'unshift':\n                    inserted = args;\n                    break;\n                case 'splice':\n                    inserted = args.slice(2);\n                    break;\n            }\n            if (inserted) ob.observeArray(inserted);\n            // notify change\n            ob.notify();\n            return result;\n        });\n    }\n);\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\n_.define(arrayProto, '$set', function $set(index, val) {\n    if (index >= this.length) {\n        this.length = index + 1;\n    }\n    return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\n_.define(arrayProto, '$remove', function $remove(index) {\n    if (typeof index !== 'number') {\n        index = this.indexOf(index);\n    }\n    if (index > -1) {\n        return this.splice(index, 1)[0];\n    }\n});\n\nmodule.exports = arrayMethods;\n","__webpack_require__.h = () => \"84060237ddd08a12a812\""],"sourceRoot":""}
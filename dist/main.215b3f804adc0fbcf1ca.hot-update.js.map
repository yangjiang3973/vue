{"version":3,"sources":["file:////Users/yangjiang/dev/learn/vue/src/directives/repeat.js","file:///webpack/runtime/getFullHash"],"names":["_","require","isObject","isPlainObject","textParser","expParser","templateParser","compile","transclude","mergeOptions","uid","module","exports","bind","id","filters","objectConverter","objToArray","read","unshift","ref","document","createComment","replace","el","template","tagName","parse","checkIf","checkRef","checkComponent","idKey","_checkParam","cache","Object","create","attr","warn","refID","vm","$interpolate","elId","options","$options","Ctor","Vue","inherit","_linkFn","asComponent","inlineTempalte","extractContent","tokens","components","assertAsset","merged","$parent","_asComponent","_parent","__vue__","ctorExp","tokensToExp","ctorGetter","get","update","data","type","range","toArray","vms","diff","$","$$","map","$el","oldVms","converted","alias","arg","init","Array","length","obj","raw","i","l","$value","getVm","_reused","$index","$key","_setData","build","_new","$before","uncacheVm","$destroy","targetNext","currentNext","nextEl","findNextVm","index","needCache","meta","resolveCtor","$addChild","clone","_host","_meta","_repeat","cacheVm","self","$watch","val","rawValue","$set","context","key","define","call","unbind","hasOwnProperty","push","_raw","cached","pop","_blockEnd","nextSibling","keys","res","n","ret"],"mappings":"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","file":"main.215b3f804adc0fbcf1ca.hot-update.js","sourcesContent":["var _ = require('../util');\nvar isObject = _.isObject;\nvar isPlainObject = _.isPlainObject;\nvar textParser = require('../parsers/text');\nvar expParser = require('../parsers/expression');\nvar templateParser = require('../parsers/template');\nvar compile = require('../compiler/compile');\nvar transclude = require('../compiler/transclude');\nvar mergeOptions = require('../util/merge-option');\nvar uid = 0;\n\nmodule.exports = {\n    /**\n     * Setup.\n     */\n\n    bind: function () {\n        // uid as a cache identifier\n        this.id = '__v_repeat_' + ++uid;\n        // we need to insert the objToArray converter\n        // as the first read filter, because it has to be invoked\n        // before any user filters. (can't do it in `update`)\n        if (!this.filters) {\n            this.filters = {};\n        }\n        // add the object -> array convert filter\n        var objectConverter = _.bind(objToArray, this);\n        if (!this.filters.read) {\n            this.filters.read = [objectConverter];\n        } else {\n            this.filters.read.unshift(objectConverter);\n        }\n        // setup ref node\n        this.ref = document.createComment('v-repeat');\n        _.replace(this.el, this.ref);\n        // check if this is a block repeat\n        this.template =\n            this.el.tagName === 'TEMPLATE'\n                ? templateParser.parse(this.el, true)\n                : this.el;\n        // check other directives that need to be handled\n        // at v-repeat level\n        this.checkIf();\n        this.checkRef();\n        this.checkComponent();\n        // check for trackby param\n        this.idKey =\n            this._checkParam('track-by') || this._checkParam('trackby'); // 0.11.0 compat\n        this.cache = Object.create(null);\n    },\n\n    /**\n     * Warn against v-if usage.\n     */\n\n    checkIf: function () {\n        if (_.attr(this.el, 'if') !== null) {\n            _.warn(\n                \"Don't use v-if with v-repeat. \" +\n                    'Use v-show or the \"filterBy\" filter instead.'\n            );\n        }\n    },\n\n    /**\n     * Check if v-ref/ v-el is also present.\n     */\n\n    checkRef: function () {\n        var refID = _.attr(this.el, 'ref');\n        this.refID = refID ? this.vm.$interpolate(refID) : null;\n        var elId = _.attr(this.el, 'el');\n        this.elId = elId ? this.vm.$interpolate(elId) : null;\n    },\n\n    /**\n     * Check the component constructor to use for repeated\n     * instances. If static we resolve it now, otherwise it\n     * needs to be resolved at build time with actual data.\n     */\n\n    checkComponent: function () {\n        var id = _.attr(this.el, 'component');\n        var options = this.vm.$options;\n        if (!id) {\n            // default constructor\n            this.Ctor = _.Vue;\n            // inline repeats should inherit\n            this.inherit = true;\n            // important: transclude with no options, just\n            // to ensure block start and block end\n            this.template = transclude(this.template);\n            this._linkFn = compile(this.template, options);\n        } else {\n            this.asComponent = true;\n            // check inline-template\n            if (this._checkParam('inline-template') !== null) {\n                // extract inline template as a DocumentFragment\n                this.inlineTempalte = _.extractContent(this.el, true);\n            }\n            var tokens = textParser.parse(id);\n            if (!tokens) {\n                // static component\n                var Ctor = (this.Ctor = options.components[id]);\n                _.assertAsset(Ctor, 'component', id);\n                var merged = mergeOptions(\n                    Ctor.options,\n                    {},\n                    {\n                        $parent: this.vm,\n                    }\n                );\n                merged.template = this.inlineTempalte || merged.template;\n                merged._asComponent = true;\n                merged._parent = this.vm;\n                this.template = transclude(this.template, merged);\n                // Important: mark the template as a root node so that\n                // custom element components don't get compiled twice.\n                // fixes #822\n                this.template.__vue__ = true;\n                this._linkFn = compile(this.template, merged);\n            } else {\n                // to be resolved later\n                var ctorExp = textParser.tokensToExp(tokens);\n                this.ctorGetter = expParser.parse(ctorExp).get;\n            }\n        }\n    },\n\n    /**\n     * Update.\n     * This is called whenever the Array mutates.\n     *\n     * @param {Array|Number|String} data\n     */\n\n    update: function (data) {\n        data = data || [];\n        var type = typeof data;\n        if (type === 'number') {\n            data = range(data);\n        } else if (type === 'string') {\n            data = _.toArray(data);\n        }\n        this.vms = this.diff(data, this.vms);\n        // update v-ref\n        if (this.refID) {\n            this.vm.$[this.refID] = this.vms;\n        }\n        if (this.elId) {\n            this.vm.$$[this.elId] = this.vms.map(function (vm) {\n                return vm.$el;\n            });\n        }\n    },\n\n    /**\n     * Diff, based on new data and old data, determine the\n     * minimum amount of DOM manipulations needed to make the\n     * DOM reflect the new data Array.\n     *\n     * The algorithm diffs the new data Array by storing a\n     * hidden reference to an owner vm instance on previously\n     * seen data. This allows us to achieve O(n) which is\n     * better than a levenshtein distance based algorithm,\n     * which is O(m * n).\n     *\n     * @param {Array} data\n     * @param {Array} oldVms\n     * @return {Array}\n     */\n\n    diff: function (data, oldVms) {\n        var idKey = this.idKey;\n        var converted = this.converted;\n        var ref = this.ref;\n        var alias = this.arg;\n        var init = !oldVms;\n        var vms = new Array(data.length);\n        var obj, raw, vm, i, l;\n        // First pass, go through the new Array and fill up\n        // the new vms array. If a piece of data has a cached\n        // instance for it, we reuse it. Otherwise build a new\n        // instance.\n        for (i = 0, l = data.length; i < l; i++) {\n            obj = data[i];\n            raw = converted ? obj.$value : obj;\n            vm = !init && this.getVm(raw);\n            if (vm) {\n                // reusable instance\n                vm._reused = true;\n                vm.$index = i; // update $index\n                if (converted) {\n                    vm.$key = obj.$key; // update $key\n                }\n                if (idKey) {\n                    // swap track by id data\n                    if (alias) {\n                        vm[alias] = raw;\n                    } else {\n                        vm._setData(raw);\n                    }\n                }\n            } else {\n                // new instance\n                vm = this.build(obj, i, true);\n                vm._new = true;\n                vm._reused = false;\n            }\n            vms[i] = vm;\n            // insert if this is first run\n            if (init) {\n                vm.$before(ref); //* NOTE: first, add all elements one by one here\n            }\n        }\n        // if this is the first run, we're done.\n        if (init) {\n            return vms;\n        }\n        // Second pass, go through the old vm instances and\n        // destroy those who are not reused (and remove them\n        // from cache)\n        for (i = 0, l = oldVms.length; i < l; i++) {\n            vm = oldVms[i];\n            if (!vm._reused) {\n                this.uncacheVm(vm);\n                vm.$destroy(true);\n            }\n        }\n        // final pass, move/insert new instances into the\n        // right place. We're going in reverse here because\n        // insertBefore relies on the next sibling to be\n        // resolved.\n        var targetNext, currentNext;\n        i = vms.length;\n        while (i--) {\n            vm = vms[i];\n            // this is the vm that we should be in front of\n            targetNext = vms[i + 1];\n            if (!targetNext) {\n                // This is the last item. If it's reused then\n                // everything else will eventually be in the right\n                // place, so no need to touch it. Otherwise, insert\n                // it.\n                if (!vm._reused) {\n                    vm.$before(ref);\n                }\n            } else {\n                var nextEl = targetNext.$el;\n                if (vm._reused) {\n                    // this is the vm we are actually in front of\n                    currentNext = findNextVm(vm, ref);\n                    // we only need to move if we are not in the right\n                    // place already.\n                    if (currentNext !== targetNext) {\n                        vm.$before(nextEl, null, false);\n                    }\n                } else {\n                    // new instance, insert to existing next\n                    vm.$before(nextEl);\n                }\n            }\n            vm._new = false;\n            vm._reused = false;\n        }\n        return vms;\n    },\n\n    /**\n     * Build a new instance and cache it.\n     *\n     * @param {Object} data\n     * @param {Number} index\n     * @param {Boolean} needCache\n     */\n\n    build: function (data, index, needCache) {\n        var meta = { $index: index };\n        if (this.converted) {\n            meta.$key = data.$key;\n        }\n        var raw = this.converted ? data.$value : data;\n        var alias = this.arg;\n        if (alias) {\n            data = {};\n            data[alias] = raw;\n        } else if (!isPlainObject(raw)) {\n            // non-object values\n            data = {};\n            meta.$value = raw;\n        } else {\n            // default\n            data = raw;\n        }\n        // resolve constructor\n        var Ctor = this.Ctor || this.resolveCtor(data, meta);\n        var vm = this.vm.$addChild(\n            {\n                el: templateParser.clone(this.template),\n                _asComponent: this.asComponent,\n                _host: this._host,\n                _linkFn: this._linkFn,\n                _meta: meta,\n                data: data,\n                inherit: this.inherit,\n                template: this.inlineTempalte,\n            },\n            Ctor\n        );\n        // flag this instance as a repeat instance\n        // so that we can skip it in vm._digest\n        vm._repeat = true;\n        // cache instance\n        if (needCache) {\n            this.cacheVm(raw, vm);\n        }\n        // sync back changes for $value, particularly for\n        // two-way bindings of primitive values\n        var self = this;\n        vm.$watch('$value', function (val) {\n            if (self.converted) {\n                self.rawValue[vm.$key] = val;\n            } else {\n                self.rawValue.$set(vm.$index, val);\n            }\n        });\n        return vm;\n    },\n\n    /**\n     * Resolve a contructor to use for an instance.\n     * The tricky part here is that there could be dynamic\n     * components depending on instance data.\n     *\n     * @param {Object} data\n     * @param {Object} meta\n     * @return {Function}\n     */\n\n    resolveCtor: function (data, meta) {\n        // create a temporary context object and copy data\n        // and meta properties onto it.\n        // use _.define to avoid accidentally overwriting scope\n        // properties.\n        var context = Object.create(this.vm);\n        var key;\n        for (key in data) {\n            _.define(context, key, data[key]);\n        }\n        for (key in meta) {\n            _.define(context, key, meta[key]);\n        }\n        var id = this.ctorGetter.call(context, context);\n        var Ctor = this.vm.$options.components[id];\n        _.assertAsset(Ctor, 'component', id);\n        return Ctor;\n    },\n\n    /**\n     * Unbind, teardown everything\n     */\n\n    unbind: function () {\n        if (this.refID) {\n            this.vm.$[this.refID] = null;\n        }\n        if (this.vms) {\n            var i = this.vms.length;\n            var vm;\n            while (i--) {\n                vm = this.vms[i];\n                this.uncacheVm(vm);\n                vm.$destroy();\n            }\n        }\n    },\n\n    /**\n     * Cache a vm instance based on its data.\n     *\n     * If the data is an object, we save the vm's reference on\n     * the data object as a hidden property. Otherwise we\n     * cache them in an object and for each primitive value\n     * there is an array in case there are duplicates.\n     *\n     * @param {Object} data\n     * @param {Vue} vm\n     */\n\n    cacheVm: function (data, vm) {\n        var idKey = this.idKey;\n        var cache = this.cache;\n        var id;\n        if (idKey) {\n            id = data[idKey];\n            if (!cache[id]) {\n                cache[id] = vm;\n            } else {\n                _.warn('Duplicate track-by key in v-repeat: ' + id);\n            }\n        } else if (isObject(data)) {\n            id = this.id;\n            if (data.hasOwnProperty(id)) {\n                if (data[id] === null) {\n                    data[id] = vm;\n                } else {\n                    _.warn(\n                        'Duplicate objects are not supported in v-repeat ' +\n                            'when using components or transitions.'\n                    );\n                }\n            } else {\n                _.define(data, this.id, vm);\n            }\n        } else {\n            if (!cache[data]) {\n                cache[data] = [vm];\n            } else {\n                cache[data].push(vm);\n            }\n        }\n        vm._raw = data;\n    },\n\n    /**\n     * Try to get a cached instance from a piece of data.\n     *\n     * @param {Object} data\n     * @return {Vue|undefined}\n     */\n\n    getVm: function (data) {\n        if (this.idKey) {\n            return this.cache[data[this.idKey]];\n        } else if (isObject(data)) {\n            return data[this.id];\n        } else {\n            var cached = this.cache[data];\n            if (cached) {\n                var i = 0;\n                var vm = cached[i];\n                // since duplicated vm instances might be a reused\n                // one OR a newly created one, we need to return the\n                // first instance that is neither of these.\n                while (vm && (vm._reused || vm._new)) {\n                    vm = cached[++i];\n                }\n                return vm;\n            }\n        }\n    },\n\n    /**\n     * Delete a cached vm instance.\n     *\n     * @param {Vue} vm\n     */\n\n    uncacheVm: function (vm) {\n        var data = vm._raw;\n        if (this.idKey) {\n            this.cache[data[this.idKey]] = null;\n        } else if (isObject(data)) {\n            data[this.id] = null;\n            vm._raw = null;\n        } else {\n            this.cache[data].pop();\n        }\n    },\n};\n\n/**\n * Helper to find the next element that is an instance\n * root node. This is necessary because a destroyed vm's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its __vue__ reference\n * should have been removed so we can skip them.\n *\n * @param {Vue} vm\n * @param {CommentNode} ref\n * @return {Vue}\n */\n\nfunction findNextVm(vm, ref) {\n    var el = (vm._blockEnd || vm.$el).nextSibling;\n    while (!el.__vue__ && el !== ref) {\n        el = el.nextSibling;\n    }\n    return el.__vue__;\n}\n\n/**\n * Attempt to convert non-Array objects to array.\n * This is the default filter installed to every v-repeat\n * directive.\n *\n * It will be called with **the directive** as `this`\n * context so that we can mark the repeat array as converted\n * from an object.\n *\n * @param {*} obj\n * @return {Array}\n * @private\n */\n\nfunction objToArray(obj) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = obj;\n    if (!isPlainObject(obj)) {\n        return obj;\n    }\n    var keys = Object.keys(obj);\n    var i = keys.length;\n    var res = new Array(i);\n    var key;\n    while (i--) {\n        key = keys[i];\n        res[i] = {\n            $key: key,\n            $value: obj[key],\n        };\n    }\n    // `this` points to the repeat directive instance\n    this.converted = true;\n    return res;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n    var i = -1;\n    var ret = new Array(n);\n    while (++i < n) {\n        ret[i] = i;\n    }\n    return ret;\n}\n","__webpack_require__.h = () => \"456a12bc07631cd3f57a\""],"sourceRoot":""}
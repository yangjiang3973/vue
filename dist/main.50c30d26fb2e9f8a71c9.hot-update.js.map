{"version":3,"sources":["file:////Users/yangjiang/dev/learn/vue/src/observer/dep.js","file:///webpack/runtime/getFullHash"],"names":["uid","Dep","id","subs","target","prototype","addSub","sub","push","removeSub","$remove","depend","console","log","addDep","notify","toArray","i","l","length","update"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA,IAAIA,GAAG,GAAG,CAAV;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASC,GAAT,GAAe;AAC5B,OAAKC,EAAL,GAAUF,GAAG,EAAb;AACA,OAAKG,IAAL,GAAY,EAAZ;AACD,C,CAED;AACA;AACA;;AACAF,GAAG,CAACG,MAAJ,GAAa,IAAb;AAEA;AACA;AACA;AACA;AACA;;AAEAH,GAAG,CAACI,SAAJ,CAAcC,MAAd,GAAuB,UAAUC,GAAV,EAAe;AACpC,OAAKJ,IAAL,CAAUK,IAAV,CAAeD,GAAf;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;;;AAEAN,GAAG,CAACI,SAAJ,CAAcI,SAAd,GAA0B,UAAUF,GAAV,EAAe;AACvC,OAAKJ,IAAL,CAAUO,OAAV,CAAkBH,GAAlB;AACD,CAFD;AAIA;AACA;AACA;;;AAEAN,GAAG,CAACI,SAAJ,CAAcM,MAAd,GAAuB,YAAY;AACjCC,SAAO,CAACC,GAAR,CAAY,CAAZ;AACAZ,KAAG,CAACG,MAAJ,CAAWU,MAAX,CAAkB,IAAlB;AACD,CAHD;AAKA;AACA;AACA;;;AAEAb,GAAG,CAACI,SAAJ,CAAcU,MAAd,GAAuB,YAAY;AACjC;AACA,MAAIZ,IAAI,GAAGa,oDAAO,CAAC,KAAKb,IAAN,CAAlB;;AACA,OAAK,IAAIc,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGf,IAAI,CAACgB,MAAzB,EAAiCF,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3Cd,QAAI,CAACc,CAAD,CAAJ,CAAQG,MAAR;AACD;AACF,CAND,C;;;;;;;;;;WCtDA,oD","file":"main.50c30d26fb2e9f8a71c9.hot-update.js","sourcesContent":["import { toArray } from \"../util/index\";\n\nlet uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\n\nexport default function Dep() {\n  this.id = uid++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  console.log(1);\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n","__webpack_require__.h = () => \"98f850695478b4a77cc5\""],"sourceRoot":""}